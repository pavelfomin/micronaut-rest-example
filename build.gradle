import java.time.Instant

plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.2.0"
//  com.pasam.gradle.buildinfo requires com.gorylenko.gradle-git-properties
//  both of them provide way more details than needed
//    id "com.gorylenko.gradle-git-properties" version "2.3.2"
//    id "com.pasam.gradle.buildinfo" version "0.1.3"
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")

    //management endpoints
    implementation("io.micronaut:micronaut-management")

    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")

    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")

    //JWT security
    implementation("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-jwt")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")

    testImplementation 'com.jayway.jsonpath:json-path:2.4.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'

    //JWT security (custom AuthenticationProvider)
    testImplementation 'io.projectreactor:reactor-core:3.4.14'
}

application {
    mainClass.set("com.droidablebee.micronaut.rest.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.droidablebee.*")
    }
}

task printVersion {
    doLast {
        println project.version
    }
}

task buildInfo {
    dependsOn(JavaPlugin.PROCESS_RESOURCES_TASK_NAME)
    doLast {
        File file = new File(project.tasks.findByName(
                JavaPlugin.PROCESS_RESOURCES_TASK_NAME).destinationDir,
                'META-INF/build-info.properties')
        println "Generating $file"
        file.getParentFile().mkdirs()
        file.createNewFile()
        file.withWriter('UTF-8') { writer ->
            writer.writeLine("build.name = ${project.name}")
            writer.writeLine("build.group = ${project.group}")
            writer.writeLine("build.version = ${project.version}")
            writer.writeLine("build.time = ${Instant.now()}")
        }
        println "Added the following properties to $file:\n$file.text"
    }
}

project.tasks.findByName(JavaPlugin.CLASSES_TASK_NAME).dependsOn(buildInfo)
